{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended",
    ":maintainLockFilesWeekly",
    "docker:enableMajor",
    "mergeConfidence:all-badges",
    "github>visualon/renovate-config//meta.json",
    "github>visualon/renovate-config//fixes.json",
    "github>visualon/renovate-config//groups.json",
    "github>visualon/renovate-config//replacements.json",
    "github>visualon/renovate-config//k3s.json"
  ],
  "configWarningReuseIssue": true,
  "automergeType": "branch",
  "timezone": "Europe/Berlin",
  "internalChecksFilter": "strict",
  "semanticCommits": "enabled",
  "postUpdateOptions": ["yarnDedupeHighest", "pnpmDedupe"],
  "separateMinorPatch": true,
  "separateMajorMinor": true,
  "configMigration": true,
  "commitBodyTable": true,
  "branchNameStrict": true,
  "ignorePresets": [":ignoreModulesAndTests", "helpers:disableTypesNodeMajor"],
  "ignorePaths": [
    "**/node_modules/**",
    "**/bower_components/**",
    "**/vendor/**",
    "**/examples/**",
    "**/__tests__/**",
    "**/tests/**",
    "**/flux-system/gotk-sync.yaml"
  ],
  "lockFileMaintenance": { "automerge": true },
  "packageRules": [
    {
      "description": "Require stability days",
      "matchUpdateTypes": ["major", "minor"],
      "matchDatasources": ["npm"],
      "matchPackageNames": [
        "!/^renovate(bot)?($|\\/)/",
        "!/\\/renovate(?:bot)?$/",
        "!/^(?:ghcr\\.io/)?containerbase\\//"
      ],
      "minimumReleaseAge": "3 days",
      "prNotPendingHours": 73
    },
    {
      "description": "Require dashboard approval for major updates except Renovate",
      "matchPackageNames": [
        "!/^renovate(bot)?($|\\/)/",
        "!/\\/renovate(?:bot)?$/",
        "!/^(?:ghcr\\.io/)?containerbase\\//"
      ],
      "matchUpdateTypes": ["major"],
      "dependencyDashboardApproval": true
    },
    {
      "description": "No dashboard approval for major updates of github actions",
      "matchManagers": ["github-actions"],
      "dependencyDashboardApproval": false
    },
    { "matchManagers": ["dockerfile", "droneci"], "pinDigests": true },
    {
      "matchManagers": ["droneci"],
      "matchUpdateTypes": ["minor", "patch", "digest"],
      "automerge": true
    },
    {
      "description": "Automerge ci deps minor and lower",
      "matchFileNames": ["Jenkinsfile", ".{github,forgejo}/**"],
      "extends": [":automergeMinor", "schedule:nonOfficeHours"]
    },
    {
      "description": "Automerge dev deps minor and lower",
      "matchDepTypes": ["devDependencies"],
      "extends": [":automergeMinor", "schedule:nonOfficeHours"]
    },
    {
      "description": "Automerge package managers",
      "matchDepNames": ["yarn", "pnpm"],
      "extends": [":automergeMinor", "schedule:nonOfficeHours"]
    },
    {
      "description": "Automerge dotnet dev packages (by source urls)",
      "matchSourceUrls": [
        "https://github.com/adamralph/minver{,/}**",
        "https://github.com/belav/csharpier{,/}**",
        "https://github.com/coverlet-coverage/coverlet{,/}**",
        "https://github.com/danielpalme/ReportGenerator{,/}**",
        "https://github.com/dotnet/msbuild{,/}**",
        "https://github.com/dotnet/roslyn-analyzers{,/}**",
        "https://github.com/dotnet/sourcelink{,/}**",
        "https://github.com/DotNetAnalyzers/StyleCopAnalyzers{,/}**",
        "https://github.com/fluentassertions/fluentassertions{,/}**",
        "https://github.com/fluentassertions/fluentassertions.analyzers{,/}**",
        "https://github.com/fluffynuts/NExpect{,/}**",
        "https://github.com/manuelroemer/IsExternalInit{,/}**",
        "https://github.com/manuelroemer/Nullable{,/}**",
        "https://github.com/microsoft/codecoverage{,/}**",
        "https://github.com/microsoft/testfx",
        "https://github.com/microsoft/vstest{,/}**",
        "https://github.com/Microsoft/MSBuildSdks{,/}**",
        "https://github.com/nsubstitute/**",
        "https://github.com/nunit/**",
        "https://github.com/theramis/Snapper{,/}**",
        "https://github.com/xunit/**",
        "https://nsubstitute.github.io/**"
      ],
      "matchUpdateTypes": ["minor", "patch", "digest", "pin"],
      "automerge": true
    },
    {
      "description": "Automerge dotnet dev packages (by package names)",
      "matchPackageNames": [
        "NLog.Schema",
        "NSubstitute",
        "NSubstitute.Analyzers.CSharp"
      ],
      "matchUpdateTypes": ["minor", "patch", "digest", "pin"],
      "automerge": true
    },
    {
      "description": "Use replace for peer deps",
      "matchDepTypes": ["peerDependencies"],
      "rangeStrategy": "replace"
    },
    {
      "description": "Do not separate Renovate minor and patch",
      "matchPackageNames": ["/^renovate(bot)?($|/)/"],
      "separateMinorPatch": false
    },
    {
      "description": "Add ts-jest major update to jest monorepo",
      "matchSourceUrls": ["https://github.com/kulshekhar/ts-jest{,/}**"],
      "matchUpdateTypes": ["major"],
      "groupName": "jest monorepo"
    },
    {
      "description": "Use custom regex versioning for bitnami images",
      "matchPackageNames": [
        "gcr.io/bitnami-containers/**",
        "bitnami/**",
        "docker.io/bitnami/**"
      ],
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)(:?-(?<compatibility>.+)-(?<build>\\d+)(?:-r(?<revision>\\d+))?)?$"
    },
    {
      "description": "Use other registry for chocolatey packages",
      "matchPackageNames": ["chocolatey-core.extension", "graphviz.portable"],
      "matchDatasources": ["nuget"],
      "registryUrls": ["https://chocolatey.org/api/v2/"]
    },
    {
      "description": "Use `build` semantic commit scope for some build deps",
      "matchDepNames": ["node"],
      "semanticCommitType": "build"
    },
    {
      "description": "autmerge digests via branch to reduce noise",
      "matchUpdateTypes": ["digest"],
      "automergeType": "branch"
    }
  ],
  "customManagers": [
    {
      "customType": "regex",
      "managerFilePatterns": ["**/*.tf"],
      "matchStrings": [
        "\\s+image_[a-z0-9_]+\\s+=\\s+\"(?<packageName>[a-z0-9.\\/-]+)(?::(?<currentValue>[a-z0-9.-]+))?(?:@(?<currentDigest>sha256:[a-f0-9]+))?\"\\s+# renovate:(?: depName=(?<depName>.+?))?(?: versioning=(?<versioning>.+?))?\\s"
      ],
      "datasourceTemplate": "docker",
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else}}docker{{/if}}",
      "depNameTemplate": "{{#if depName}}{{depName}}{{else}}{{packageName}}{{/if}}"
    },
    {
      "customType": "regex",
      "description": "update versions inside yaml manifests",
      "managerFilePatterns": ["**/*.yaml"],
      "matchStrings": [
        ":\\s+(?<currentValue>.+?)\\s+# renovate: datasource=(?<datasource>.+?) depName=(?<depName>.+?)(?: packageName=(?<packageName>.+?))?(?: versioning=(?<versioning>.+?))?\\s"
      ]
    },
    {
      "customType": "regex",
      "description": "update _version variables in terraform",
      "managerFilePatterns": ["**/*.tf"],
      "matchStrings": [
        "\\s+(?<depName>[a-z0-9_]+?)_version\\s+=\\s+\"(?<currentValue>[a-z0-9.-]+)\"\\s+# renovate: datasource=(?<datasource>.+?)(?: packageName=(?<packageName>.+?))?(?: versioning=(?<versioning>.+?))?\\s"
      ]
    },
    {
      "customType": "regex",
      "managerFilePatterns": ["Jenkinsfile"],
      "matchStringsStrategy": "any",
      "matchStrings": [
        "image '(?<depName>[a-z0-9.\\/-]+)(?::(?<currentValue>[a-z0-9.-]+))?(?:@(?<currentDigest>sha256:[a-f0-9]+))?'",
        "image \"(?<depName>[a-z0-9.\\/-]+)(?::(?<currentValue>[a-z0-9.-]+))?(?:@(?<currentDigest>sha256:[a-f0-9]+))?\"",
        "image('(?<depName>[a-z0-9.\\/-]+)(?::(?<currentValue>[a-z0-9.-]+))?(?:@(?<currentDigest>sha256:[a-f0-9]+))?')",
        "image(\"(?<depName>[a-z0-9.\\/-]+)(?::(?<currentValue>[a-z0-9.-]+))?(?:@(?<currentDigest>sha256:[a-f0-9]+))?\")"
      ],
      "datasourceTemplate": "docker",
      "versioningTemplate": "docker"
    },
    {
      "customType": "regex",
      "description": "Update install-* Buildpack commands and _VERSION variables in Dockerfiles",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile\\.[^/]*$/"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.+?) depName=(?<depName>.+?)(?: (?:packageName|lookupName)=(?<packageName>.+?))?( versioning=(?<versioning>.+?))?\\s(ENV|ARG) [A-Z0-9_]+?_VERSION=(?<currentValue>.+?)\\s",
        "# renovate: datasource=(?<datasource>.+?)(?: (?:packageName|lookupName)=(?<packageName>.+?))?(?: versioning=(?<versioning>.+?))?\\sRUN install-[a-z]+? (?<depName>[a-z0-9-]+?) (?<currentValue>.+?)\\s"
      ]
    },
    {
      "customType": "regex",
      "description": "Update install-* Buildpack commands and _VERSION variables in shell scripts",
      "managerFilePatterns": ["**/*.sh", "**/*.ps1"],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.+?) depName=(?<depName>.+?)(?: (?:packageName|lookupName)=(?<packageName>.+?))?( versioning=(?<versioning>.+?))?\\s\\$?[A-Z0-9_]+?_VERSION\\s*=\\s*['\"]?(?<currentValue>.+?)['\"]?\\s",
        "# renovate: datasource=(?<datasource>.+?)(?: (?:packageName|lookupName)=(?<packageName>.+?))?(?: versioning=(?<versioning>.+?))?\\sinstall-[a-z]+? (?<depName>[a-z0-9-]+?) (?<currentValue>.+?)\\s"
      ]
    },
    {
      "customType": "regex",
      "description": "nuspec files manager",
      "managerFilePatterns": ["**/*.nuspec"],
      "matchStringsStrategy": "any",
      "matchStrings": [
        "<dependency\\s+id=\"(?<depName>.*?)\"\\s+version=\"(?<currentValue>.+?)\"\\s*\\/>"
      ],
      "datasourceTemplate": "nuget",
      "versioningTemplate": "nuget"
    },
    {
      "description": "update pnpm patches",
      "customType": "regex",
      "managerFilePatterns": ["/(?:^|/)package\\.json$/"],
      "matchStrings": [
        "\"(?<depName>.+?)@(?<currentValue>\\d+\\.\\d+\\.\\d+(?:-.+)?)\": \"patches/"
      ],
      "datasourceTemplate": "npm",
      "depTypeTemplate": "patchedDependencies"
    },
    {
      "description": "update flux kustomization CRD dependencies",
      "customType": "regex",
      "managerFilePatterns": ["flux/infrastructure/crds/kustomization.yaml"],
      "matchStrings": [
        "-\\s(?:.*?)\\/(?<currentValue>[^/\\s]+)\\/[^/\\s]+ # renovate: datasource=(?<datasource>.+?) depName=(?<depName>.+?)\\s"
      ]
    }
  ],
  "hostRules": [
    {
      "description": "forgejo-code has rate limits",
      "matchHost": "code.forgejo.org",
      "hostType": "forgejo",
      "maxRequestsPerSecond": 8
    },
    {
      "description": "codeberg has rate limits",
      "matchHost": "codeberg.org",
      "hostType": "forgejo",
      "maxRequestsPerSecond": 8
    },
    {
      "description": "mark deuxfleurs as forgejo",
      "matchHost": "git.deuxfleurs.fr",
      "hostType": "forgejo"
    }
  ]
}
