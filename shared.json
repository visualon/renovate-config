{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base",
    ":maintainLockFilesWeekly",
    "docker:enableMajor",
    "github>whitesource/merge-confidence:beta",
    "github>visualon/renovate-config:meta",
    "github>visualon/renovate-config:fixes",
    "github>visualon/renovate-config:groups"
  ],
  "automergeType": "branch",
  "prCreation": "not-pending",
  "timezone": "Europe/Berlin",
  "internalChecksFilter": "strict",
  "semanticCommits": "enabled",
  "postUpdateOptions": ["yarnDedupeHighest"],
  "separateMinorPatch": true,
  "ignorePresets": [":ignoreModulesAndTests", "helpers:disableTypesNodeMajor"],
  "ignorePaths": [
    "**/node_modules/**",
    "**/bower_components/**",
    "**/vendor/**",
    "**/examples/**",
    "**/__tests__/**",
    "**/tests/**"
  ],
  "lockFileMaintenance": {
    "automerge": true
  },
  "packageRules": [
    {
      "description": "Require stability days",
      "matchUpdateTypes": ["major", "minor"],
      "excludePackagePatterns": [
        "^renovate(bot)?($|\\/)",
        "\\/renovate(?:bot)?$"
      ],
      "stabilityDays": 3,
      "prNotPendingHours": 73
    },
    {
      "description": "Require dashboard approval for major updates except Renovate",
      "excludePackagePatterns": [
        "^renovate(bot)?($|\\/)",
        "\\/renovate(?:bot)?$"
      ],
      "matchUpdateTypes": ["major"],
      "dependencyDashboardApproval": true
    },
    {
      "matchManagers": ["dockerfile", "droneci"],
      "pinDigests": true
    },
    {
      "matchManagers": ["droneci"],
      "matchUpdateTypes": ["minor", "patch", "digest"],
      "automerge": true
    },
    {
      "matchFiles": ["Jenkinsfile"],
      "matchUpdateTypes": ["minor", "patch", "digest"],
      "automerge": true
    },
    {
      "description": "Automerge dev deps minor and lower",
      "matchDepTypes": ["devDependencies", "action"],
      "extends": [":automergeMinor", "schedule:nonOfficeHours"]
    },
    {
      "description": "Automerge dotnet dev packages (by source urls)",
      "matchSourceUrlPrefixes": [
        "https://github.com/coverlet-coverage/coverlet",
        "https://github.com/danielpalme/ReportGenerator",
        "https://github.com/dotnet/msbuild",
        "https://github.com/microsoft/vstest",
        "https://github.com/adamralph/minver",
        "https://github.com/nunit/",
        "https://github.com/theramis/Snapper"
      ],
      "matchUpdateTypes": ["minor", "patch", "digest", "pin"],
      "automerge": true
    },
    {
      "description": "Automerge dotnet dev packages (by package names)",
      "matchPackageNames": [
        "NLog.Schema",
        "NSubstitute",
        "NSubstitute.Analyzers.CSharp"
      ],
      "matchUpdateTypes": ["minor", "patch", "digest", "pin"],
      "automerge": true
    },
    {
      "description": "Use replace for peer deps",
      "matchDepTypes": ["peerDependencies"],
      "rangeStrategy": "replace"
    },
    {
      "description": "Do not separate Renovate minor and patch",
      "matchPackagePatterns": ["^renovate(bot)?($|/)"],
      "separateMinorPatch": false
    },
    {
      "description": "Do not separate Helm minor and patch",
      "matchDatasources": ["helm"],
      "separateMinorPatch": false
    },
    {
      "description": "Add ts-jest major update to jest monorepo",
      "matchSourceUrlPrefixes": ["https://github.com/kulshekhar/ts-jest"],
      "matchUpdateTypes": ["major"],
      "groupName": "jest monorepo"
    },
    {
      "description": "Use custom regex versioning for bitnami images",
      "matchPackagePrefixes": ["gcr.io/bitnami-containers/","bitnami/"],
      "matchDatasources": ["docker"],
      "versioning":"regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)(:?-(?<compatibility>.*-r)(?<build>\\d+))?$"
    }
  ],
  "regexManagers": [
    {
      "fileMatch": ["\\.tf$"],
      "matchStrings": [
        "\\s+image_[a-z0-9_]+\\s+=\\s+\"(?<lookupName>[a-z0-9.\\/-]+)(?::(?<currentValue>[a-z0-9.-]+))?(?:@(?<currentDigest>sha256:[a-f0-9]+))?\"\\s+# renovate:(?: depName=(?<depName>.+?))?(?: versioning=(?<versioning>.*?))?\\s"
      ],
      "datasourceTemplate": "docker",
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else}}docker{{/if}}",
      "depNameTemplate": "{{#if depName}}{{depName}}{{else}}{{lookupName}}{{/if}}"
    },
    {
      "fileMatch": ["^Jenkinsfile$"],
      "matchStringsStrategy": "any",
      "matchStrings": [
        "image '(?<depName>[a-z0-9.\\/-]+)(?::(?<currentValue>[a-z0-9.-]+))?(?:@(?<currentDigest>sha256:[a-f0-9]+))?'",
        "image \"(?<depName>[a-z0-9.\\/-]+)(?::(?<currentValue>[a-z0-9.-]+))?(?:@(?<currentDigest>sha256:[a-f0-9]+))?\"",
        "image('(?<depName>[a-z0-9.\\/-]+)(?::(?<currentValue>[a-z0-9.-]+))?(?:@(?<currentDigest>sha256:[a-f0-9]+))?')",
        "image(\"(?<depName>[a-z0-9.\\/-]+)(?::(?<currentValue>[a-z0-9.-]+))?(?:@(?<currentDigest>sha256:[a-f0-9]+))?\")"
      ],
      "datasourceTemplate": "docker",
      "versioningTemplate": "docker"
    },
    {
      "fileMatch": ["(^|/|\\.)Dockerfile$", "(^|/)Dockerfile\\.[^/]*$"],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)(?: lookupName=(?<lookupName>.+?))?( versioning=(?<versioning>.*?))?\\s(ENV|ARG) .*?_VERSION=(?<currentValue>.*)\\s",
        "# renovate: datasource=(?<datasource>[a-z-]+?)(?: lookupName=(?<lookupName>.+?))?(?: versioning=(?<versioning>[a-z-]+?))?\\sRUN install-[a-z]+? (?<depName>[a-z-]+?) (?<currentValue>.+?)\\s"
      ]
    },
    {
      "description": "nuspec files manager",
      "fileMatch": ["\\.nuspec$"],
      "matchStringsStrategy": "any",
      "matchStrings": [
        "<dependency\\s+id=\"(?<depName>.*?)\"\\s+version=\"(?<currentValue>.*?)\"\\s*\\/>"
      ],
      "datasourceTemplate": "nuget",
      "versioningTemplate": "nuget"
    }
  ]
}
